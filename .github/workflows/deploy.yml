name: Retrieve Salesforce
on:
  push:
    branches:
      - master
jobs:
  build:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.5.2     
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock       
        with:
          ref: refs/heads/master
          fetch-depth: 1
          ssh-private-key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}            
      - run: ssh-add - <<< "${{ secrets.GIT_SSH_PRIVATE_KEY }}"      
      - run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
          mkdir sfdx-cli
          tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
          ./sfdx-cli/install                              
      - run: | 
          export SFDX_CONTENT_TYPE=JSON
          echo ${{ secrets.SALESFORCE_AUTH_URL }} > sfdx.url
          sfdx force:auth:sfdxurl:store -f sfdx.url --setdefaultusername > sfdx_login.json 2>&1
          rm sfdx.url 
     
          login_status=$(cat sfdx_login.json | jq '.status')
          if [ $login_status -ne 0 ]; then
            echo "ERROR unable to login to Salesforce"
            echo cat sfdx_login.json | jq '.message'
            exit 1
          fi                    
      - run: |          
          git clone ${{ secrets.GIT_REPOSITORY_CONNECTION }}
          cd ${{ secrets.GIT_REPOSITORY_FOLDER }}
          temp_branch=$(date +'%Y%m%d-%H%M%S%N')
          git checkout -q -b $temp_branch     

          # sfdx_username=$(cat ../sfdx_login.json | jq '.result.username')           
          # sfdx config:set defaultusername=$sfdx_username

          sfdx force:mdapi:describemetadata > ./sfdx_types.json
          # cat ./sfdx_types.json    